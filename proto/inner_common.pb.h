// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inner_common.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_inner_5fcommon_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_inner_5fcommon_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_inner_5fcommon_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_inner_5fcommon_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_inner_5fcommon_2eproto;
namespace wukong {
namespace pb {
class DataFragment;
class DataFragmentDefaultTypeInternal;
extern DataFragmentDefaultTypeInternal _DataFragment_default_instance_;
class DataFragments;
class DataFragmentsDefaultTypeInternal;
extern DataFragmentsDefaultTypeInternal _DataFragments_default_instance_;
}  // namespace pb
}  // namespace wukong
PROTOBUF_NAMESPACE_OPEN
template<> ::wukong::pb::DataFragment* Arena::CreateMaybeMessage<::wukong::pb::DataFragment>(Arena*);
template<> ::wukong::pb::DataFragments* Arena::CreateMaybeMessage<::wukong::pb::DataFragments>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace wukong {
namespace pb {

// ===================================================================

class DataFragment PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wukong.pb.DataFragment) */ {
 public:
  inline DataFragment() : DataFragment(nullptr) {};
  virtual ~DataFragment();

  DataFragment(const DataFragment& from);
  DataFragment(DataFragment&& from) noexcept
    : DataFragment() {
    *this = ::std::move(from);
  }

  inline DataFragment& operator=(const DataFragment& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataFragment& operator=(DataFragment&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DataFragment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataFragment* internal_default_instance() {
    return reinterpret_cast<const DataFragment*>(
               &_DataFragment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DataFragment& a, DataFragment& b) {
    a.Swap(&b);
  }
  inline void Swap(DataFragment* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataFragment* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataFragment* New() const final {
    return CreateMaybeMessage<DataFragment>(nullptr);
  }

  DataFragment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataFragment>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DataFragment& from);
  void MergeFrom(const DataFragment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataFragment* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wukong.pb.DataFragment";
  }
  protected:
  explicit DataFragment(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_inner_5fcommon_2eproto);
    return ::descriptor_table_inner_5fcommon_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFragNameFieldNumber = 1,
    kFragDataFieldNumber = 2,
  };
  // string fragName = 1;
  void clear_fragname();
  const std::string& fragname() const;
  void set_fragname(const std::string& value);
  void set_fragname(std::string&& value);
  void set_fragname(const char* value);
  void set_fragname(const char* value, size_t size);
  std::string* mutable_fragname();
  std::string* release_fragname();
  void set_allocated_fragname(std::string* fragname);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_fragname();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_fragname(
      std::string* fragname);
  private:
  const std::string& _internal_fragname() const;
  void _internal_set_fragname(const std::string& value);
  std::string* _internal_mutable_fragname();
  public:

  // bytes fragData = 2;
  void clear_fragdata();
  const std::string& fragdata() const;
  void set_fragdata(const std::string& value);
  void set_fragdata(std::string&& value);
  void set_fragdata(const char* value);
  void set_fragdata(const void* value, size_t size);
  std::string* mutable_fragdata();
  std::string* release_fragdata();
  void set_allocated_fragdata(std::string* fragdata);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_fragdata();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_fragdata(
      std::string* fragdata);
  private:
  const std::string& _internal_fragdata() const;
  void _internal_set_fragdata(const std::string& value);
  std::string* _internal_mutable_fragdata();
  public:

  // @@protoc_insertion_point(class_scope:wukong.pb.DataFragment)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fragname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fragdata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_inner_5fcommon_2eproto;
};
// -------------------------------------------------------------------

class DataFragments PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wukong.pb.DataFragments) */ {
 public:
  inline DataFragments() : DataFragments(nullptr) {};
  virtual ~DataFragments();

  DataFragments(const DataFragments& from);
  DataFragments(DataFragments&& from) noexcept
    : DataFragments() {
    *this = ::std::move(from);
  }

  inline DataFragments& operator=(const DataFragments& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataFragments& operator=(DataFragments&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DataFragments& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataFragments* internal_default_instance() {
    return reinterpret_cast<const DataFragments*>(
               &_DataFragments_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DataFragments& a, DataFragments& b) {
    a.Swap(&b);
  }
  inline void Swap(DataFragments* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataFragments* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataFragments* New() const final {
    return CreateMaybeMessage<DataFragments>(nullptr);
  }

  DataFragments* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataFragments>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DataFragments& from);
  void MergeFrom(const DataFragments& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataFragments* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wukong.pb.DataFragments";
  }
  protected:
  explicit DataFragments(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_inner_5fcommon_2eproto);
    return ::descriptor_table_inner_5fcommon_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFragmentsFieldNumber = 1,
  };
  // repeated .wukong.pb.DataFragment fragments = 1;
  int fragments_size() const;
  private:
  int _internal_fragments_size() const;
  public:
  void clear_fragments();
  ::wukong::pb::DataFragment* mutable_fragments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::wukong::pb::DataFragment >*
      mutable_fragments();
  private:
  const ::wukong::pb::DataFragment& _internal_fragments(int index) const;
  ::wukong::pb::DataFragment* _internal_add_fragments();
  public:
  const ::wukong::pb::DataFragment& fragments(int index) const;
  ::wukong::pb::DataFragment* add_fragments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::wukong::pb::DataFragment >&
      fragments() const;

  // @@protoc_insertion_point(class_scope:wukong.pb.DataFragments)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::wukong::pb::DataFragment > fragments_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_inner_5fcommon_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DataFragment

// string fragName = 1;
inline void DataFragment::clear_fragname() {
  fragname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DataFragment::fragname() const {
  // @@protoc_insertion_point(field_get:wukong.pb.DataFragment.fragName)
  return _internal_fragname();
}
inline void DataFragment::set_fragname(const std::string& value) {
  _internal_set_fragname(value);
  // @@protoc_insertion_point(field_set:wukong.pb.DataFragment.fragName)
}
inline std::string* DataFragment::mutable_fragname() {
  // @@protoc_insertion_point(field_mutable:wukong.pb.DataFragment.fragName)
  return _internal_mutable_fragname();
}
inline const std::string& DataFragment::_internal_fragname() const {
  return fragname_.Get();
}
inline void DataFragment::_internal_set_fragname(const std::string& value) {
  
  fragname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DataFragment::set_fragname(std::string&& value) {
  
  fragname_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:wukong.pb.DataFragment.fragName)
}
inline void DataFragment::set_fragname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  fragname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:wukong.pb.DataFragment.fragName)
}
inline void DataFragment::set_fragname(const char* value,
    size_t size) {
  
  fragname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:wukong.pb.DataFragment.fragName)
}
inline std::string* DataFragment::_internal_mutable_fragname() {
  
  return fragname_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DataFragment::release_fragname() {
  // @@protoc_insertion_point(field_release:wukong.pb.DataFragment.fragName)
  return fragname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DataFragment::set_allocated_fragname(std::string* fragname) {
  if (fragname != nullptr) {
    
  } else {
    
  }
  fragname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fragname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:wukong.pb.DataFragment.fragName)
}
inline std::string* DataFragment::unsafe_arena_release_fragname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:wukong.pb.DataFragment.fragName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return fragname_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DataFragment::unsafe_arena_set_allocated_fragname(
    std::string* fragname) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (fragname != nullptr) {
    
  } else {
    
  }
  fragname_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      fragname, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wukong.pb.DataFragment.fragName)
}

// bytes fragData = 2;
inline void DataFragment::clear_fragdata() {
  fragdata_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DataFragment::fragdata() const {
  // @@protoc_insertion_point(field_get:wukong.pb.DataFragment.fragData)
  return _internal_fragdata();
}
inline void DataFragment::set_fragdata(const std::string& value) {
  _internal_set_fragdata(value);
  // @@protoc_insertion_point(field_set:wukong.pb.DataFragment.fragData)
}
inline std::string* DataFragment::mutable_fragdata() {
  // @@protoc_insertion_point(field_mutable:wukong.pb.DataFragment.fragData)
  return _internal_mutable_fragdata();
}
inline const std::string& DataFragment::_internal_fragdata() const {
  return fragdata_.Get();
}
inline void DataFragment::_internal_set_fragdata(const std::string& value) {
  
  fragdata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DataFragment::set_fragdata(std::string&& value) {
  
  fragdata_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:wukong.pb.DataFragment.fragData)
}
inline void DataFragment::set_fragdata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  fragdata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:wukong.pb.DataFragment.fragData)
}
inline void DataFragment::set_fragdata(const void* value,
    size_t size) {
  
  fragdata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:wukong.pb.DataFragment.fragData)
}
inline std::string* DataFragment::_internal_mutable_fragdata() {
  
  return fragdata_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DataFragment::release_fragdata() {
  // @@protoc_insertion_point(field_release:wukong.pb.DataFragment.fragData)
  return fragdata_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DataFragment::set_allocated_fragdata(std::string* fragdata) {
  if (fragdata != nullptr) {
    
  } else {
    
  }
  fragdata_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fragdata,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:wukong.pb.DataFragment.fragData)
}
inline std::string* DataFragment::unsafe_arena_release_fragdata() {
  // @@protoc_insertion_point(field_unsafe_arena_release:wukong.pb.DataFragment.fragData)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return fragdata_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DataFragment::unsafe_arena_set_allocated_fragdata(
    std::string* fragdata) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (fragdata != nullptr) {
    
  } else {
    
  }
  fragdata_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      fragdata, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wukong.pb.DataFragment.fragData)
}

// -------------------------------------------------------------------

// DataFragments

// repeated .wukong.pb.DataFragment fragments = 1;
inline int DataFragments::_internal_fragments_size() const {
  return fragments_.size();
}
inline int DataFragments::fragments_size() const {
  return _internal_fragments_size();
}
inline void DataFragments::clear_fragments() {
  fragments_.Clear();
}
inline ::wukong::pb::DataFragment* DataFragments::mutable_fragments(int index) {
  // @@protoc_insertion_point(field_mutable:wukong.pb.DataFragments.fragments)
  return fragments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::wukong::pb::DataFragment >*
DataFragments::mutable_fragments() {
  // @@protoc_insertion_point(field_mutable_list:wukong.pb.DataFragments.fragments)
  return &fragments_;
}
inline const ::wukong::pb::DataFragment& DataFragments::_internal_fragments(int index) const {
  return fragments_.Get(index);
}
inline const ::wukong::pb::DataFragment& DataFragments::fragments(int index) const {
  // @@protoc_insertion_point(field_get:wukong.pb.DataFragments.fragments)
  return _internal_fragments(index);
}
inline ::wukong::pb::DataFragment* DataFragments::_internal_add_fragments() {
  return fragments_.Add();
}
inline ::wukong::pb::DataFragment* DataFragments::add_fragments() {
  // @@protoc_insertion_point(field_add:wukong.pb.DataFragments.fragments)
  return _internal_add_fragments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::wukong::pb::DataFragment >&
DataFragments::fragments() const {
  // @@protoc_insertion_point(field_list:wukong.pb.DataFragments.fragments)
  return fragments_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace wukong

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_inner_5fcommon_2eproto
