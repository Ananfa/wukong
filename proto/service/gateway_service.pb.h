// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gateway_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_gateway_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_gateway_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "corpc_option.pb.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gateway_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_gateway_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gateway_5fservice_2eproto;
namespace wukong {
namespace pb {
class ForwardOutRequest;
class ForwardOutRequestDefaultTypeInternal;
extern ForwardOutRequestDefaultTypeInternal _ForwardOutRequest_default_instance_;
class ForwardOutTarget;
class ForwardOutTargetDefaultTypeInternal;
extern ForwardOutTargetDefaultTypeInternal _ForwardOutTarget_default_instance_;
class HeartbeatRequest;
class HeartbeatRequestDefaultTypeInternal;
extern HeartbeatRequestDefaultTypeInternal _HeartbeatRequest_default_instance_;
}  // namespace pb
}  // namespace wukong
PROTOBUF_NAMESPACE_OPEN
template<> ::wukong::pb::ForwardOutRequest* Arena::CreateMaybeMessage<::wukong::pb::ForwardOutRequest>(Arena*);
template<> ::wukong::pb::ForwardOutTarget* Arena::CreateMaybeMessage<::wukong::pb::ForwardOutTarget>(Arena*);
template<> ::wukong::pb::HeartbeatRequest* Arena::CreateMaybeMessage<::wukong::pb::HeartbeatRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace wukong {
namespace pb {

// ===================================================================

class HeartbeatRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wukong.pb.HeartbeatRequest) */ {
 public:
  inline HeartbeatRequest() : HeartbeatRequest(nullptr) {};
  virtual ~HeartbeatRequest();

  HeartbeatRequest(const HeartbeatRequest& from);
  HeartbeatRequest(HeartbeatRequest&& from) noexcept
    : HeartbeatRequest() {
    *this = ::std::move(from);
  }

  inline HeartbeatRequest& operator=(const HeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeartbeatRequest& operator=(HeartbeatRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HeartbeatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartbeatRequest* internal_default_instance() {
    return reinterpret_cast<const HeartbeatRequest*>(
               &_HeartbeatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(HeartbeatRequest& a, HeartbeatRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(HeartbeatRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HeartbeatRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeartbeatRequest* New() const final {
    return CreateMaybeMessage<HeartbeatRequest>(nullptr);
  }

  HeartbeatRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeartbeatRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HeartbeatRequest& from);
  void MergeFrom(const HeartbeatRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartbeatRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wukong.pb.HeartbeatRequest";
  }
  protected:
  explicit HeartbeatRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gateway_5fservice_2eproto);
    return ::descriptor_table_gateway_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kRoleIdFieldNumber = 2,
    kServerTypeFieldNumber = 3,
    kServerIdFieldNumber = 4,
  };
  // uint32 userId = 1;
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint32 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 roleId = 2;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint32 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 serverType = 3;
  void clear_servertype();
  ::PROTOBUF_NAMESPACE_ID::uint32 servertype() const;
  void set_servertype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_servertype() const;
  void _internal_set_servertype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 serverId = 4;
  void clear_serverid();
  ::PROTOBUF_NAMESPACE_ID::uint32 serverid() const;
  void set_serverid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_serverid() const;
  void _internal_set_serverid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:wukong.pb.HeartbeatRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 userid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 roleid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 servertype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 serverid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gateway_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ForwardOutTarget PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wukong.pb.ForwardOutTarget) */ {
 public:
  inline ForwardOutTarget() : ForwardOutTarget(nullptr) {};
  virtual ~ForwardOutTarget();

  ForwardOutTarget(const ForwardOutTarget& from);
  ForwardOutTarget(ForwardOutTarget&& from) noexcept
    : ForwardOutTarget() {
    *this = ::std::move(from);
  }

  inline ForwardOutTarget& operator=(const ForwardOutTarget& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForwardOutTarget& operator=(ForwardOutTarget&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ForwardOutTarget& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ForwardOutTarget* internal_default_instance() {
    return reinterpret_cast<const ForwardOutTarget*>(
               &_ForwardOutTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ForwardOutTarget& a, ForwardOutTarget& b) {
    a.Swap(&b);
  }
  inline void Swap(ForwardOutTarget* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForwardOutTarget* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ForwardOutTarget* New() const final {
    return CreateMaybeMessage<ForwardOutTarget>(nullptr);
  }

  ForwardOutTarget* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ForwardOutTarget>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ForwardOutTarget& from);
  void MergeFrom(const ForwardOutTarget& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForwardOutTarget* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wukong.pb.ForwardOutTarget";
  }
  protected:
  explicit ForwardOutTarget(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gateway_5fservice_2eproto);
    return ::descriptor_table_gateway_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kRoleIdFieldNumber = 2,
  };
  // uint32 userId = 1;
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint32 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 roleId = 2;
  void clear_roleid();
  ::PROTOBUF_NAMESPACE_ID::uint32 roleid() const;
  void set_roleid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_roleid() const;
  void _internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:wukong.pb.ForwardOutTarget)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 userid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 roleid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gateway_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ForwardOutRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wukong.pb.ForwardOutRequest) */ {
 public:
  inline ForwardOutRequest() : ForwardOutRequest(nullptr) {};
  virtual ~ForwardOutRequest();

  ForwardOutRequest(const ForwardOutRequest& from);
  ForwardOutRequest(ForwardOutRequest&& from) noexcept
    : ForwardOutRequest() {
    *this = ::std::move(from);
  }

  inline ForwardOutRequest& operator=(const ForwardOutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForwardOutRequest& operator=(ForwardOutRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ForwardOutRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ForwardOutRequest* internal_default_instance() {
    return reinterpret_cast<const ForwardOutRequest*>(
               &_ForwardOutRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ForwardOutRequest& a, ForwardOutRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ForwardOutRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForwardOutRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ForwardOutRequest* New() const final {
    return CreateMaybeMessage<ForwardOutRequest>(nullptr);
  }

  ForwardOutRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ForwardOutRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ForwardOutRequest& from);
  void MergeFrom(const ForwardOutRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForwardOutRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wukong.pb.ForwardOutRequest";
  }
  protected:
  explicit ForwardOutRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gateway_5fservice_2eproto);
    return ::descriptor_table_gateway_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetsFieldNumber = 3,
    kRawMsgFieldNumber = 4,
    kTypeFieldNumber = 1,
    kTagFieldNumber = 2,
  };
  // repeated .wukong.pb.ForwardOutTarget targets = 3;
  int targets_size() const;
  private:
  int _internal_targets_size() const;
  public:
  void clear_targets();
  ::wukong::pb::ForwardOutTarget* mutable_targets(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::wukong::pb::ForwardOutTarget >*
      mutable_targets();
  private:
  const ::wukong::pb::ForwardOutTarget& _internal_targets(int index) const;
  ::wukong::pb::ForwardOutTarget* _internal_add_targets();
  public:
  const ::wukong::pb::ForwardOutTarget& targets(int index) const;
  ::wukong::pb::ForwardOutTarget* add_targets();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::wukong::pb::ForwardOutTarget >&
      targets() const;

  // bytes rawMsg = 4;
  void clear_rawmsg();
  const std::string& rawmsg() const;
  void set_rawmsg(const std::string& value);
  void set_rawmsg(std::string&& value);
  void set_rawmsg(const char* value);
  void set_rawmsg(const void* value, size_t size);
  std::string* mutable_rawmsg();
  std::string* release_rawmsg();
  void set_allocated_rawmsg(std::string* rawmsg);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_rawmsg();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_rawmsg(
      std::string* rawmsg);
  private:
  const std::string& _internal_rawmsg() const;
  void _internal_set_rawmsg(const std::string& value);
  std::string* _internal_mutable_rawmsg();
  public:

  // int32 type = 1;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 tag = 2;
  void clear_tag();
  ::PROTOBUF_NAMESPACE_ID::uint32 tag() const;
  void set_tag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tag() const;
  void _internal_set_tag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:wukong.pb.ForwardOutRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::wukong::pb::ForwardOutTarget > targets_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rawmsg_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tag_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gateway_5fservice_2eproto;
};
// ===================================================================

class GatewayService_Stub;

class GatewayService : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline GatewayService() {};
 public:
  virtual ~GatewayService();

  typedef GatewayService_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void shutdown(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::corpc::Void* request,
                       ::corpc::Void* response,
                       ::google::protobuf::Closure* done);
  virtual void kick(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::wukong::pb::Uint32Value* request,
                       ::wukong::pb::BoolValue* response,
                       ::google::protobuf::Closure* done);
  virtual void getOnlineCount(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::corpc::Void* request,
                       ::wukong::pb::Uint32Value* response,
                       ::google::protobuf::Closure* done);
  virtual void forwardOut(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::wukong::pb::ForwardOutRequest* request,
                       ::corpc::Void* response,
                       ::google::protobuf::Closure* done);
  virtual void heartbeat(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::wukong::pb::HeartbeatRequest* request,
                       ::wukong::pb::BoolValue* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(GatewayService);
};

class GatewayService_Stub : public GatewayService {
 public:
  GatewayService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  GatewayService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~GatewayService_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements GatewayService ------------------------------------------

  void shutdown(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::corpc::Void* request,
                       ::corpc::Void* response,
                       ::google::protobuf::Closure* done);
  void kick(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::wukong::pb::Uint32Value* request,
                       ::wukong::pb::BoolValue* response,
                       ::google::protobuf::Closure* done);
  void getOnlineCount(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::corpc::Void* request,
                       ::wukong::pb::Uint32Value* response,
                       ::google::protobuf::Closure* done);
  void forwardOut(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::wukong::pb::ForwardOutRequest* request,
                       ::corpc::Void* response,
                       ::google::protobuf::Closure* done);
  void heartbeat(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::wukong::pb::HeartbeatRequest* request,
                       ::wukong::pb::BoolValue* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(GatewayService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HeartbeatRequest

// uint32 userId = 1;
inline void HeartbeatRequest::clear_userid() {
  userid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeartbeatRequest::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeartbeatRequest::userid() const {
  // @@protoc_insertion_point(field_get:wukong.pb.HeartbeatRequest.userId)
  return _internal_userid();
}
inline void HeartbeatRequest::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  userid_ = value;
}
inline void HeartbeatRequest::set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:wukong.pb.HeartbeatRequest.userId)
}

// uint32 roleId = 2;
inline void HeartbeatRequest::clear_roleid() {
  roleid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeartbeatRequest::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeartbeatRequest::roleid() const {
  // @@protoc_insertion_point(field_get:wukong.pb.HeartbeatRequest.roleId)
  return _internal_roleid();
}
inline void HeartbeatRequest::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  roleid_ = value;
}
inline void HeartbeatRequest::set_roleid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:wukong.pb.HeartbeatRequest.roleId)
}

// uint32 serverType = 3;
inline void HeartbeatRequest::clear_servertype() {
  servertype_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeartbeatRequest::_internal_servertype() const {
  return servertype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeartbeatRequest::servertype() const {
  // @@protoc_insertion_point(field_get:wukong.pb.HeartbeatRequest.serverType)
  return _internal_servertype();
}
inline void HeartbeatRequest::_internal_set_servertype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  servertype_ = value;
}
inline void HeartbeatRequest::set_servertype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_servertype(value);
  // @@protoc_insertion_point(field_set:wukong.pb.HeartbeatRequest.serverType)
}

// uint32 serverId = 4;
inline void HeartbeatRequest::clear_serverid() {
  serverid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeartbeatRequest::_internal_serverid() const {
  return serverid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HeartbeatRequest::serverid() const {
  // @@protoc_insertion_point(field_get:wukong.pb.HeartbeatRequest.serverId)
  return _internal_serverid();
}
inline void HeartbeatRequest::_internal_set_serverid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  serverid_ = value;
}
inline void HeartbeatRequest::set_serverid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:wukong.pb.HeartbeatRequest.serverId)
}

// -------------------------------------------------------------------

// ForwardOutTarget

// uint32 userId = 1;
inline void ForwardOutTarget::clear_userid() {
  userid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ForwardOutTarget::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ForwardOutTarget::userid() const {
  // @@protoc_insertion_point(field_get:wukong.pb.ForwardOutTarget.userId)
  return _internal_userid();
}
inline void ForwardOutTarget::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  userid_ = value;
}
inline void ForwardOutTarget::set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:wukong.pb.ForwardOutTarget.userId)
}

// uint32 roleId = 2;
inline void ForwardOutTarget::clear_roleid() {
  roleid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ForwardOutTarget::_internal_roleid() const {
  return roleid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ForwardOutTarget::roleid() const {
  // @@protoc_insertion_point(field_get:wukong.pb.ForwardOutTarget.roleId)
  return _internal_roleid();
}
inline void ForwardOutTarget::_internal_set_roleid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  roleid_ = value;
}
inline void ForwardOutTarget::set_roleid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:wukong.pb.ForwardOutTarget.roleId)
}

// -------------------------------------------------------------------

// ForwardOutRequest

// int32 type = 1;
inline void ForwardOutRequest::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardOutRequest::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardOutRequest::type() const {
  // @@protoc_insertion_point(field_get:wukong.pb.ForwardOutRequest.type)
  return _internal_type();
}
inline void ForwardOutRequest::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void ForwardOutRequest::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:wukong.pb.ForwardOutRequest.type)
}

// uint32 tag = 2;
inline void ForwardOutRequest::clear_tag() {
  tag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ForwardOutRequest::_internal_tag() const {
  return tag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ForwardOutRequest::tag() const {
  // @@protoc_insertion_point(field_get:wukong.pb.ForwardOutRequest.tag)
  return _internal_tag();
}
inline void ForwardOutRequest::_internal_set_tag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  tag_ = value;
}
inline void ForwardOutRequest::set_tag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tag(value);
  // @@protoc_insertion_point(field_set:wukong.pb.ForwardOutRequest.tag)
}

// repeated .wukong.pb.ForwardOutTarget targets = 3;
inline int ForwardOutRequest::_internal_targets_size() const {
  return targets_.size();
}
inline int ForwardOutRequest::targets_size() const {
  return _internal_targets_size();
}
inline void ForwardOutRequest::clear_targets() {
  targets_.Clear();
}
inline ::wukong::pb::ForwardOutTarget* ForwardOutRequest::mutable_targets(int index) {
  // @@protoc_insertion_point(field_mutable:wukong.pb.ForwardOutRequest.targets)
  return targets_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::wukong::pb::ForwardOutTarget >*
ForwardOutRequest::mutable_targets() {
  // @@protoc_insertion_point(field_mutable_list:wukong.pb.ForwardOutRequest.targets)
  return &targets_;
}
inline const ::wukong::pb::ForwardOutTarget& ForwardOutRequest::_internal_targets(int index) const {
  return targets_.Get(index);
}
inline const ::wukong::pb::ForwardOutTarget& ForwardOutRequest::targets(int index) const {
  // @@protoc_insertion_point(field_get:wukong.pb.ForwardOutRequest.targets)
  return _internal_targets(index);
}
inline ::wukong::pb::ForwardOutTarget* ForwardOutRequest::_internal_add_targets() {
  return targets_.Add();
}
inline ::wukong::pb::ForwardOutTarget* ForwardOutRequest::add_targets() {
  // @@protoc_insertion_point(field_add:wukong.pb.ForwardOutRequest.targets)
  return _internal_add_targets();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::wukong::pb::ForwardOutTarget >&
ForwardOutRequest::targets() const {
  // @@protoc_insertion_point(field_list:wukong.pb.ForwardOutRequest.targets)
  return targets_;
}

// bytes rawMsg = 4;
inline void ForwardOutRequest::clear_rawmsg() {
  rawmsg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ForwardOutRequest::rawmsg() const {
  // @@protoc_insertion_point(field_get:wukong.pb.ForwardOutRequest.rawMsg)
  return _internal_rawmsg();
}
inline void ForwardOutRequest::set_rawmsg(const std::string& value) {
  _internal_set_rawmsg(value);
  // @@protoc_insertion_point(field_set:wukong.pb.ForwardOutRequest.rawMsg)
}
inline std::string* ForwardOutRequest::mutable_rawmsg() {
  // @@protoc_insertion_point(field_mutable:wukong.pb.ForwardOutRequest.rawMsg)
  return _internal_mutable_rawmsg();
}
inline const std::string& ForwardOutRequest::_internal_rawmsg() const {
  return rawmsg_.Get();
}
inline void ForwardOutRequest::_internal_set_rawmsg(const std::string& value) {
  
  rawmsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ForwardOutRequest::set_rawmsg(std::string&& value) {
  
  rawmsg_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:wukong.pb.ForwardOutRequest.rawMsg)
}
inline void ForwardOutRequest::set_rawmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rawmsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:wukong.pb.ForwardOutRequest.rawMsg)
}
inline void ForwardOutRequest::set_rawmsg(const void* value,
    size_t size) {
  
  rawmsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:wukong.pb.ForwardOutRequest.rawMsg)
}
inline std::string* ForwardOutRequest::_internal_mutable_rawmsg() {
  
  return rawmsg_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ForwardOutRequest::release_rawmsg() {
  // @@protoc_insertion_point(field_release:wukong.pb.ForwardOutRequest.rawMsg)
  return rawmsg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ForwardOutRequest::set_allocated_rawmsg(std::string* rawmsg) {
  if (rawmsg != nullptr) {
    
  } else {
    
  }
  rawmsg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rawmsg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:wukong.pb.ForwardOutRequest.rawMsg)
}
inline std::string* ForwardOutRequest::unsafe_arena_release_rawmsg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:wukong.pb.ForwardOutRequest.rawMsg)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return rawmsg_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ForwardOutRequest::unsafe_arena_set_allocated_rawmsg(
    std::string* rawmsg) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (rawmsg != nullptr) {
    
  } else {
    
  }
  rawmsg_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      rawmsg, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:wukong.pb.ForwardOutRequest.rawMsg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace wukong

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_gateway_5fservice_2eproto
