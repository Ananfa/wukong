// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_service.proto

#include "game_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace wukong {
namespace pb {
constexpr ForwardInRequest::ForwardInRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rawmsg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(0)
  , tag_(0u)
  , roleid_(0u){}
struct ForwardInRequestDefaultTypeInternal {
  constexpr ForwardInRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ForwardInRequestDefaultTypeInternal() {}
  union {
    ForwardInRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ForwardInRequestDefaultTypeInternal _ForwardInRequest_default_instance_;
constexpr EnterGameRequest::EnterGameRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : roleid_(0u)
  , ltoken_(0u)
  , gatewayid_(0u){}
struct EnterGameRequestDefaultTypeInternal {
  constexpr EnterGameRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EnterGameRequestDefaultTypeInternal() {}
  union {
    EnterGameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EnterGameRequestDefaultTypeInternal _EnterGameRequest_default_instance_;
}  // namespace pb
}  // namespace wukong
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_game_5fservice_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_game_5fservice_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_game_5fservice_2eproto[1];

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_game_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wukong::pb::ForwardInRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wukong::pb::ForwardInRequest, type_),
  PROTOBUF_FIELD_OFFSET(::wukong::pb::ForwardInRequest, tag_),
  PROTOBUF_FIELD_OFFSET(::wukong::pb::ForwardInRequest, roleid_),
  PROTOBUF_FIELD_OFFSET(::wukong::pb::ForwardInRequest, rawmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wukong::pb::EnterGameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wukong::pb::EnterGameRequest, roleid_),
  PROTOBUF_FIELD_OFFSET(::wukong::pb::EnterGameRequest, ltoken_),
  PROTOBUF_FIELD_OFFSET(::wukong::pb::EnterGameRequest, gatewayid_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::wukong::pb::ForwardInRequest)},
  { 9, -1, sizeof(::wukong::pb::EnterGameRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wukong::pb::_ForwardInRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wukong::pb::_EnterGameRequest_default_instance_),
};

const char descriptor_table_protodef_game_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022game_service.proto\022\twukong.pb\032\022corpc_o"
  "ption.proto\"M\n\020ForwardInRequest\022\014\n\004type\030"
  "\001 \001(\005\022\013\n\003tag\030\002 \001(\r\022\016\n\006roleId\030\003 \001(\r\022\016\n\006ra"
  "wMsg\030\004 \001(\014\"E\n\020EnterGameRequest\022\016\n\006roleId"
  "\030\001 \001(\r\022\016\n\006lToken\030\002 \001(\r\022\021\n\tgatewayId\030\003 \001("
  "\r2\215\001\n\013GameService\022;\n\tforwardIn\022\033.wukong."
  "pb.ForwardInRequest\032\013.corpc.Void\"\004\230\361\004\001\022;"
  "\n\tenterGame\022\033.wukong.pb.EnterGameRequest"
  "\032\013.corpc.Void\"\004\230\361\004\001\032\004\200\361\004\002B\003\200\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_game_5fservice_2eproto_deps[1] = {
  &::descriptor_table_corpc_5foption_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_game_5fservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_game_5fservice_2eproto = {
  false, false, 358, descriptor_table_protodef_game_5fservice_2eproto, "game_service.proto", 
  &descriptor_table_game_5fservice_2eproto_once, descriptor_table_game_5fservice_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_game_5fservice_2eproto::offsets,
  file_level_metadata_game_5fservice_2eproto, file_level_enum_descriptors_game_5fservice_2eproto, file_level_service_descriptors_game_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_game_5fservice_2eproto_getter() {
  return &descriptor_table_game_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_game_5fservice_2eproto(&descriptor_table_game_5fservice_2eproto);
namespace wukong {
namespace pb {

// ===================================================================

class ForwardInRequest::_Internal {
 public:
};

ForwardInRequest::ForwardInRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wukong.pb.ForwardInRequest)
}
ForwardInRequest::ForwardInRequest(const ForwardInRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rawmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rawmsg().empty()) {
    rawmsg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rawmsg(), 
      GetArenaForAllocation());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&type_)) + sizeof(roleid_));
  // @@protoc_insertion_point(copy_constructor:wukong.pb.ForwardInRequest)
}

inline void ForwardInRequest::SharedCtor() {
rawmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&type_)) + sizeof(roleid_));
}

ForwardInRequest::~ForwardInRequest() {
  // @@protoc_insertion_point(destructor:wukong.pb.ForwardInRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ForwardInRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  rawmsg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ForwardInRequest::ArenaDtor(void* object) {
  ForwardInRequest* _this = reinterpret_cast< ForwardInRequest* >(object);
  (void)_this;
}
void ForwardInRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ForwardInRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ForwardInRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:wukong.pb.ForwardInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rawmsg_.ClearToEmpty();
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roleid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(roleid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ForwardInRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 tag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          tag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 roleId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes rawMsg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_rawmsg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ForwardInRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wukong.pb.ForwardInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // uint32 tag = 2;
  if (this->_internal_tag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_tag(), target);
  }

  // uint32 roleId = 3;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_roleid(), target);
  }

  // bytes rawMsg = 4;
  if (!this->_internal_rawmsg().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_rawmsg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wukong.pb.ForwardInRequest)
  return target;
}

size_t ForwardInRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wukong.pb.ForwardInRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes rawMsg = 4;
  if (!this->_internal_rawmsg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_rawmsg());
  }

  // int32 type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // uint32 tag = 2;
  if (this->_internal_tag() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_tag());
  }

  // uint32 roleId = 3;
  if (this->_internal_roleid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roleid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ForwardInRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ForwardInRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ForwardInRequest::GetClassData() const { return &_class_data_; }

void ForwardInRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<ForwardInRequest *>(to)->MergeFrom(
      static_cast<const ForwardInRequest &>(from));
}


void ForwardInRequest::MergeFrom(const ForwardInRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wukong.pb.ForwardInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rawmsg().empty()) {
    _internal_set_rawmsg(from._internal_rawmsg());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_tag() != 0) {
    _internal_set_tag(from._internal_tag());
  }
  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ForwardInRequest::CopyFrom(const ForwardInRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wukong.pb.ForwardInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardInRequest::IsInitialized() const {
  return true;
}

void ForwardInRequest::InternalSwap(ForwardInRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &rawmsg_, GetArenaForAllocation(),
      &other->rawmsg_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ForwardInRequest, roleid_)
      + sizeof(ForwardInRequest::roleid_)
      - PROTOBUF_FIELD_OFFSET(ForwardInRequest, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ForwardInRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_game_5fservice_2eproto_getter, &descriptor_table_game_5fservice_2eproto_once,
      file_level_metadata_game_5fservice_2eproto[0]);
}

// ===================================================================

class EnterGameRequest::_Internal {
 public:
};

EnterGameRequest::EnterGameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wukong.pb.EnterGameRequest)
}
EnterGameRequest::EnterGameRequest(const EnterGameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gatewayid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(gatewayid_));
  // @@protoc_insertion_point(copy_constructor:wukong.pb.EnterGameRequest)
}

inline void EnterGameRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&roleid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&gatewayid_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(gatewayid_));
}

EnterGameRequest::~EnterGameRequest() {
  // @@protoc_insertion_point(destructor:wukong.pb.EnterGameRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void EnterGameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EnterGameRequest::ArenaDtor(void* object) {
  EnterGameRequest* _this = reinterpret_cast< EnterGameRequest* >(object);
  (void)_this;
}
void EnterGameRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnterGameRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EnterGameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:wukong.pb.EnterGameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gatewayid_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(gatewayid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnterGameRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 roleId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 lToken = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ltoken_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 gatewayId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          gatewayid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnterGameRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wukong.pb.EnterGameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 roleId = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_roleid(), target);
  }

  // uint32 lToken = 2;
  if (this->_internal_ltoken() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ltoken(), target);
  }

  // uint32 gatewayId = 3;
  if (this->_internal_gatewayid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_gatewayid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wukong.pb.EnterGameRequest)
  return target;
}

size_t EnterGameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wukong.pb.EnterGameRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 roleId = 1;
  if (this->_internal_roleid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roleid());
  }

  // uint32 lToken = 2;
  if (this->_internal_ltoken() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ltoken());
  }

  // uint32 gatewayId = 3;
  if (this->_internal_gatewayid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_gatewayid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnterGameRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EnterGameRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnterGameRequest::GetClassData() const { return &_class_data_; }

void EnterGameRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<EnterGameRequest *>(to)->MergeFrom(
      static_cast<const EnterGameRequest &>(from));
}


void EnterGameRequest::MergeFrom(const EnterGameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wukong.pb.EnterGameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_ltoken() != 0) {
    _internal_set_ltoken(from._internal_ltoken());
  }
  if (from._internal_gatewayid() != 0) {
    _internal_set_gatewayid(from._internal_gatewayid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnterGameRequest::CopyFrom(const EnterGameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wukong.pb.EnterGameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterGameRequest::IsInitialized() const {
  return true;
}

void EnterGameRequest::InternalSwap(EnterGameRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnterGameRequest, gatewayid_)
      + sizeof(EnterGameRequest::gatewayid_)
      - PROTOBUF_FIELD_OFFSET(EnterGameRequest, roleid_)>(
          reinterpret_cast<char*>(&roleid_),
          reinterpret_cast<char*>(&other->roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EnterGameRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_game_5fservice_2eproto_getter, &descriptor_table_game_5fservice_2eproto_once,
      file_level_metadata_game_5fservice_2eproto[1]);
}

// ===================================================================

GameService::~GameService() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GameService::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_5fservice_2eproto);
  return file_level_service_descriptors_game_5fservice_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GameService::GetDescriptor() {
  return descriptor();
}

void GameService::forwardIn(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::wukong::pb::ForwardInRequest*,
                         ::corpc::Void*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method forwardIn() not implemented.");
  done->Run();
}

void GameService::enterGame(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::wukong::pb::EnterGameRequest*,
                         ::corpc::Void*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method enterGame() not implemented.");
  done->Run();
}

void GameService::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_game_5fservice_2eproto[0]);
  switch(method->index()) {
    case 0:
      forwardIn(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::wukong::pb::ForwardInRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::corpc::Void*>(
                 response),
             done);
      break;
    case 1:
      enterGame(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::wukong::pb::EnterGameRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::corpc::Void*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& GameService::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::wukong::pb::ForwardInRequest::default_instance();
    case 1:
      return ::wukong::pb::EnterGameRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& GameService::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::corpc::Void::default_instance();
    case 1:
      return ::corpc::Void::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

GameService_Stub::GameService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
GameService_Stub::GameService_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
GameService_Stub::~GameService_Stub() {
  if (owns_channel_) delete channel_;
}

void GameService_Stub::forwardIn(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::wukong::pb::ForwardInRequest* request,
                              ::corpc::Void* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void GameService_Stub::enterGame(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::wukong::pb::EnterGameRequest* request,
                              ::corpc::Void* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
}  // namespace wukong
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::wukong::pb::ForwardInRequest* Arena::CreateMaybeMessage< ::wukong::pb::ForwardInRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wukong::pb::ForwardInRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::wukong::pb::EnterGameRequest* Arena::CreateMaybeMessage< ::wukong::pb::EnterGameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wukong::pb::EnterGameRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
