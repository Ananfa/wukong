// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: demoGame.proto

#include "demoGame.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_demoGame_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Card_demoGame_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_demoGame_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pet_demoGame_2eproto;
namespace demo {
namespace pb {
class CurrencyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Currency> _instance;
} _Currency_default_instance_;
class CardDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Card> _instance;
} _Card_default_instance_;
class CardsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cards> _instance;
} _Cards_default_instance_;
class PetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pet> _instance;
} _Pet_default_instance_;
class PetsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pets> _instance;
} _Pets_default_instance_;
class SignInActivityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SignInActivity> _instance;
} _SignInActivity_default_instance_;
}  // namespace pb
}  // namespace demo
static void InitDefaultsscc_info_Card_demoGame_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::demo::pb::_Card_default_instance_;
    new (ptr) ::demo::pb::Card();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::demo::pb::Card::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Card_demoGame_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Card_demoGame_2eproto}, {}};

static void InitDefaultsscc_info_Cards_demoGame_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::demo::pb::_Cards_default_instance_;
    new (ptr) ::demo::pb::Cards();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::demo::pb::Cards::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cards_demoGame_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cards_demoGame_2eproto}, {
      &scc_info_Card_demoGame_2eproto.base,}};

static void InitDefaultsscc_info_Currency_demoGame_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::demo::pb::_Currency_default_instance_;
    new (ptr) ::demo::pb::Currency();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::demo::pb::Currency::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Currency_demoGame_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Currency_demoGame_2eproto}, {}};

static void InitDefaultsscc_info_Pet_demoGame_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::demo::pb::_Pet_default_instance_;
    new (ptr) ::demo::pb::Pet();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::demo::pb::Pet::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pet_demoGame_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pet_demoGame_2eproto}, {}};

static void InitDefaultsscc_info_Pets_demoGame_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::demo::pb::_Pets_default_instance_;
    new (ptr) ::demo::pb::Pets();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::demo::pb::Pets::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Pets_demoGame_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Pets_demoGame_2eproto}, {
      &scc_info_Pet_demoGame_2eproto.base,}};

static void InitDefaultsscc_info_SignInActivity_demoGame_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::demo::pb::_SignInActivity_default_instance_;
    new (ptr) ::demo::pb::SignInActivity();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::demo::pb::SignInActivity::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignInActivity_demoGame_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SignInActivity_demoGame_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_demoGame_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_demoGame_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_demoGame_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_demoGame_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::demo::pb::Currency, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::demo::pb::Currency, c1_),
  PROTOBUF_FIELD_OFFSET(::demo::pb::Currency, c2_),
  PROTOBUF_FIELD_OFFSET(::demo::pb::Currency, c3_),
  PROTOBUF_FIELD_OFFSET(::demo::pb::Currency, c4_),
  PROTOBUF_FIELD_OFFSET(::demo::pb::Currency, c5_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::demo::pb::Card, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::demo::pb::Card, cardid_),
  PROTOBUF_FIELD_OFFSET(::demo::pb::Card, star_),
  PROTOBUF_FIELD_OFFSET(::demo::pb::Card, lv_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::demo::pb::Cards, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::demo::pb::Cards, cards_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::demo::pb::Pet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::demo::pb::Pet, petid_),
  PROTOBUF_FIELD_OFFSET(::demo::pb::Pet, defid_),
  PROTOBUF_FIELD_OFFSET(::demo::pb::Pet, exp_),
  PROTOBUF_FIELD_OFFSET(::demo::pb::Pet, lv_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::demo::pb::Pets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::demo::pb::Pets, pets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::demo::pb::SignInActivity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::demo::pb::SignInActivity, days_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::demo::pb::Currency)},
  { 10, -1, sizeof(::demo::pb::Card)},
  { 18, -1, sizeof(::demo::pb::Cards)},
  { 24, -1, sizeof(::demo::pb::Pet)},
  { 33, -1, sizeof(::demo::pb::Pets)},
  { 39, -1, sizeof(::demo::pb::SignInActivity)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::demo::pb::_Currency_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::demo::pb::_Card_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::demo::pb::_Cards_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::demo::pb::_Pet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::demo::pb::_Pets_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::demo::pb::_SignInActivity_default_instance_),
};

const char descriptor_table_protodef_demoGame_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016demoGame.proto\022\007demo.pb\"F\n\010Currency\022\n\n"
  "\002c1\030\001 \001(\r\022\n\n\002c2\030\002 \001(\r\022\n\n\002c3\030\003 \001(\r\022\n\n\002c4\030"
  "\004 \001(\r\022\n\n\002c5\030\005 \001(\r\"0\n\004Card\022\016\n\006cardId\030\001 \001("
  "\r\022\014\n\004star\030\002 \001(\r\022\n\n\002lv\030\003 \001(\r\"%\n\005Cards\022\034\n\005"
  "cards\030\001 \003(\0132\r.demo.pb.Card\"<\n\003Pet\022\r\n\005pet"
  "Id\030\001 \001(\r\022\r\n\005defId\030\002 \001(\r\022\013\n\003exp\030\003 \001(\r\022\n\n\002"
  "lv\030\004 \001(\r\"\"\n\004Pets\022\032\n\004pets\030\001 \003(\0132\014.demo.pb"
  ".Pet\"\036\n\016SignInActivity\022\014\n\004days\030\001 \003(\rb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_demoGame_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_demoGame_2eproto_sccs[6] = {
  &scc_info_Card_demoGame_2eproto.base,
  &scc_info_Cards_demoGame_2eproto.base,
  &scc_info_Currency_demoGame_2eproto.base,
  &scc_info_Pet_demoGame_2eproto.base,
  &scc_info_Pets_demoGame_2eproto.base,
  &scc_info_SignInActivity_demoGame_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_demoGame_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_demoGame_2eproto = {
  false, false, descriptor_table_protodef_demoGame_2eproto, "demoGame.proto", 324,
  &descriptor_table_demoGame_2eproto_once, descriptor_table_demoGame_2eproto_sccs, descriptor_table_demoGame_2eproto_deps, 6, 0,
  schemas, file_default_instances, TableStruct_demoGame_2eproto::offsets,
  file_level_metadata_demoGame_2eproto, 6, file_level_enum_descriptors_demoGame_2eproto, file_level_service_descriptors_demoGame_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_demoGame_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_demoGame_2eproto)), true);
namespace demo {
namespace pb {

// ===================================================================

void Currency::InitAsDefaultInstance() {
}
class Currency::_Internal {
 public:
};

Currency::Currency(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:demo.pb.Currency)
}
Currency::Currency(const Currency& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&c1_, &from.c1_,
    static_cast<size_t>(reinterpret_cast<char*>(&c5_) -
    reinterpret_cast<char*>(&c1_)) + sizeof(c5_));
  // @@protoc_insertion_point(copy_constructor:demo.pb.Currency)
}

void Currency::SharedCtor() {
  ::memset(&c1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&c5_) -
      reinterpret_cast<char*>(&c1_)) + sizeof(c5_));
}

Currency::~Currency() {
  // @@protoc_insertion_point(destructor:demo.pb.Currency)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Currency::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Currency::ArenaDtor(void* object) {
  Currency* _this = reinterpret_cast< Currency* >(object);
  (void)_this;
}
void Currency::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Currency::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Currency& Currency::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Currency_demoGame_2eproto.base);
  return *internal_default_instance();
}


void Currency::Clear() {
// @@protoc_insertion_point(message_clear_start:demo.pb.Currency)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&c1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&c5_) -
      reinterpret_cast<char*>(&c1_)) + sizeof(c5_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Currency::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 c1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          c1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 c2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          c2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 c3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          c3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 c4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          c4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 c5 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          c5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Currency::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:demo.pb.Currency)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 c1 = 1;
  if (this->c1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_c1(), target);
  }

  // uint32 c2 = 2;
  if (this->c2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_c2(), target);
  }

  // uint32 c3 = 3;
  if (this->c3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_c3(), target);
  }

  // uint32 c4 = 4;
  if (this->c4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_c4(), target);
  }

  // uint32 c5 = 5;
  if (this->c5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_c5(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:demo.pb.Currency)
  return target;
}

size_t Currency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:demo.pb.Currency)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 c1 = 1;
  if (this->c1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_c1());
  }

  // uint32 c2 = 2;
  if (this->c2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_c2());
  }

  // uint32 c3 = 3;
  if (this->c3() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_c3());
  }

  // uint32 c4 = 4;
  if (this->c4() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_c4());
  }

  // uint32 c5 = 5;
  if (this->c5() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_c5());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Currency::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:demo.pb.Currency)
  GOOGLE_DCHECK_NE(&from, this);
  const Currency* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Currency>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:demo.pb.Currency)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:demo.pb.Currency)
    MergeFrom(*source);
  }
}

void Currency::MergeFrom(const Currency& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:demo.pb.Currency)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.c1() != 0) {
    _internal_set_c1(from._internal_c1());
  }
  if (from.c2() != 0) {
    _internal_set_c2(from._internal_c2());
  }
  if (from.c3() != 0) {
    _internal_set_c3(from._internal_c3());
  }
  if (from.c4() != 0) {
    _internal_set_c4(from._internal_c4());
  }
  if (from.c5() != 0) {
    _internal_set_c5(from._internal_c5());
  }
}

void Currency::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:demo.pb.Currency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Currency::CopyFrom(const Currency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:demo.pb.Currency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Currency::IsInitialized() const {
  return true;
}

void Currency::InternalSwap(Currency* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Currency, c5_)
      + sizeof(Currency::c5_)
      - PROTOBUF_FIELD_OFFSET(Currency, c1_)>(
          reinterpret_cast<char*>(&c1_),
          reinterpret_cast<char*>(&other->c1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Currency::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Card::InitAsDefaultInstance() {
}
class Card::_Internal {
 public:
};

Card::Card(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:demo.pb.Card)
}
Card::Card(const Card& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cardid_, &from.cardid_,
    static_cast<size_t>(reinterpret_cast<char*>(&lv_) -
    reinterpret_cast<char*>(&cardid_)) + sizeof(lv_));
  // @@protoc_insertion_point(copy_constructor:demo.pb.Card)
}

void Card::SharedCtor() {
  ::memset(&cardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lv_) -
      reinterpret_cast<char*>(&cardid_)) + sizeof(lv_));
}

Card::~Card() {
  // @@protoc_insertion_point(destructor:demo.pb.Card)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Card::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Card::ArenaDtor(void* object) {
  Card* _this = reinterpret_cast< Card* >(object);
  (void)_this;
}
void Card::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Card::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Card& Card::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Card_demoGame_2eproto.base);
  return *internal_default_instance();
}


void Card::Clear() {
// @@protoc_insertion_point(message_clear_start:demo.pb.Card)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cardid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lv_) -
      reinterpret_cast<char*>(&cardid_)) + sizeof(lv_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Card::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 cardId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cardid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 star = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          star_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 lv = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          lv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Card::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:demo.pb.Card)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cardId = 1;
  if (this->cardid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_cardid(), target);
  }

  // uint32 star = 2;
  if (this->star() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_star(), target);
  }

  // uint32 lv = 3;
  if (this->lv() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_lv(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:demo.pb.Card)
  return target;
}

size_t Card::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:demo.pb.Card)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 cardId = 1;
  if (this->cardid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_cardid());
  }

  // uint32 star = 2;
  if (this->star() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_star());
  }

  // uint32 lv = 3;
  if (this->lv() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lv());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Card::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:demo.pb.Card)
  GOOGLE_DCHECK_NE(&from, this);
  const Card* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Card>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:demo.pb.Card)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:demo.pb.Card)
    MergeFrom(*source);
  }
}

void Card::MergeFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:demo.pb.Card)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cardid() != 0) {
    _internal_set_cardid(from._internal_cardid());
  }
  if (from.star() != 0) {
    _internal_set_star(from._internal_star());
  }
  if (from.lv() != 0) {
    _internal_set_lv(from._internal_lv());
  }
}

void Card::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:demo.pb.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Card::CopyFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:demo.pb.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Card::IsInitialized() const {
  return true;
}

void Card::InternalSwap(Card* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Card, lv_)
      + sizeof(Card::lv_)
      - PROTOBUF_FIELD_OFFSET(Card, cardid_)>(
          reinterpret_cast<char*>(&cardid_),
          reinterpret_cast<char*>(&other->cardid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Card::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Cards::InitAsDefaultInstance() {
}
class Cards::_Internal {
 public:
};

Cards::Cards(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  cards_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:demo.pb.Cards)
}
Cards::Cards(const Cards& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cards_(from.cards_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:demo.pb.Cards)
}

void Cards::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cards_demoGame_2eproto.base);
}

Cards::~Cards() {
  // @@protoc_insertion_point(destructor:demo.pb.Cards)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cards::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Cards::ArenaDtor(void* object) {
  Cards* _this = reinterpret_cast< Cards* >(object);
  (void)_this;
}
void Cards::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cards::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cards& Cards::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cards_demoGame_2eproto.base);
  return *internal_default_instance();
}


void Cards::Clear() {
// @@protoc_insertion_point(message_clear_start:demo.pb.Cards)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cards_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cards::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .demo.pb.Card cards = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_cards(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cards::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:demo.pb.Cards)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .demo.pb.Card cards = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_cards_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_cards(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:demo.pb.Cards)
  return target;
}

size_t Cards::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:demo.pb.Cards)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .demo.pb.Card cards = 1;
  total_size += 1UL * this->_internal_cards_size();
  for (const auto& msg : this->cards_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cards::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:demo.pb.Cards)
  GOOGLE_DCHECK_NE(&from, this);
  const Cards* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cards>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:demo.pb.Cards)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:demo.pb.Cards)
    MergeFrom(*source);
  }
}

void Cards::MergeFrom(const Cards& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:demo.pb.Cards)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
}

void Cards::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:demo.pb.Cards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cards::CopyFrom(const Cards& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:demo.pb.Cards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cards::IsInitialized() const {
  return true;
}

void Cards::InternalSwap(Cards* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cards_.InternalSwap(&other->cards_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cards::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pet::InitAsDefaultInstance() {
}
class Pet::_Internal {
 public:
};

Pet::Pet(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:demo.pb.Pet)
}
Pet::Pet(const Pet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&petid_, &from.petid_,
    static_cast<size_t>(reinterpret_cast<char*>(&lv_) -
    reinterpret_cast<char*>(&petid_)) + sizeof(lv_));
  // @@protoc_insertion_point(copy_constructor:demo.pb.Pet)
}

void Pet::SharedCtor() {
  ::memset(&petid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lv_) -
      reinterpret_cast<char*>(&petid_)) + sizeof(lv_));
}

Pet::~Pet() {
  // @@protoc_insertion_point(destructor:demo.pb.Pet)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pet::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pet::ArenaDtor(void* object) {
  Pet* _this = reinterpret_cast< Pet* >(object);
  (void)_this;
}
void Pet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pet& Pet::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pet_demoGame_2eproto.base);
  return *internal_default_instance();
}


void Pet::Clear() {
// @@protoc_insertion_point(message_clear_start:demo.pb.Pet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&petid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lv_) -
      reinterpret_cast<char*>(&petid_)) + sizeof(lv_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 petId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          petid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 defId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          defid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 exp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 lv = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          lv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pet::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:demo.pb.Pet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 petId = 1;
  if (this->petid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_petid(), target);
  }

  // uint32 defId = 2;
  if (this->defid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_defid(), target);
  }

  // uint32 exp = 3;
  if (this->exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_exp(), target);
  }

  // uint32 lv = 4;
  if (this->lv() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_lv(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:demo.pb.Pet)
  return target;
}

size_t Pet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:demo.pb.Pet)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 petId = 1;
  if (this->petid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_petid());
  }

  // uint32 defId = 2;
  if (this->defid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_defid());
  }

  // uint32 exp = 3;
  if (this->exp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_exp());
  }

  // uint32 lv = 4;
  if (this->lv() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lv());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pet::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:demo.pb.Pet)
  GOOGLE_DCHECK_NE(&from, this);
  const Pet* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pet>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:demo.pb.Pet)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:demo.pb.Pet)
    MergeFrom(*source);
  }
}

void Pet::MergeFrom(const Pet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:demo.pb.Pet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.petid() != 0) {
    _internal_set_petid(from._internal_petid());
  }
  if (from.defid() != 0) {
    _internal_set_defid(from._internal_defid());
  }
  if (from.exp() != 0) {
    _internal_set_exp(from._internal_exp());
  }
  if (from.lv() != 0) {
    _internal_set_lv(from._internal_lv());
  }
}

void Pet::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:demo.pb.Pet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pet::CopyFrom(const Pet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:demo.pb.Pet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pet::IsInitialized() const {
  return true;
}

void Pet::InternalSwap(Pet* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pet, lv_)
      + sizeof(Pet::lv_)
      - PROTOBUF_FIELD_OFFSET(Pet, petid_)>(
          reinterpret_cast<char*>(&petid_),
          reinterpret_cast<char*>(&other->petid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pet::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pets::InitAsDefaultInstance() {
}
class Pets::_Internal {
 public:
};

Pets::Pets(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  pets_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:demo.pb.Pets)
}
Pets::Pets(const Pets& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pets_(from.pets_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:demo.pb.Pets)
}

void Pets::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Pets_demoGame_2eproto.base);
}

Pets::~Pets() {
  // @@protoc_insertion_point(destructor:demo.pb.Pets)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pets::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pets::ArenaDtor(void* object) {
  Pets* _this = reinterpret_cast< Pets* >(object);
  (void)_this;
}
void Pets::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pets::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pets& Pets::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pets_demoGame_2eproto.base);
  return *internal_default_instance();
}


void Pets::Clear() {
// @@protoc_insertion_point(message_clear_start:demo.pb.Pets)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pets_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pets::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .demo.pb.Pet pets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pets::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:demo.pb.Pets)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .demo.pb.Pet pets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pets_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_pets(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:demo.pb.Pets)
  return target;
}

size_t Pets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:demo.pb.Pets)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .demo.pb.Pet pets = 1;
  total_size += 1UL * this->_internal_pets_size();
  for (const auto& msg : this->pets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pets::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:demo.pb.Pets)
  GOOGLE_DCHECK_NE(&from, this);
  const Pets* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pets>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:demo.pb.Pets)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:demo.pb.Pets)
    MergeFrom(*source);
  }
}

void Pets::MergeFrom(const Pets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:demo.pb.Pets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pets_.MergeFrom(from.pets_);
}

void Pets::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:demo.pb.Pets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pets::CopyFrom(const Pets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:demo.pb.Pets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pets::IsInitialized() const {
  return true;
}

void Pets::InternalSwap(Pets* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pets_.InternalSwap(&other->pets_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pets::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SignInActivity::InitAsDefaultInstance() {
}
class SignInActivity::_Internal {
 public:
};

SignInActivity::SignInActivity(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  days_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:demo.pb.SignInActivity)
}
SignInActivity::SignInActivity(const SignInActivity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      days_(from.days_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:demo.pb.SignInActivity)
}

void SignInActivity::SharedCtor() {
}

SignInActivity::~SignInActivity() {
  // @@protoc_insertion_point(destructor:demo.pb.SignInActivity)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SignInActivity::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SignInActivity::ArenaDtor(void* object) {
  SignInActivity* _this = reinterpret_cast< SignInActivity* >(object);
  (void)_this;
}
void SignInActivity::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SignInActivity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignInActivity& SignInActivity::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SignInActivity_demoGame_2eproto.base);
  return *internal_default_instance();
}


void SignInActivity::Clear() {
// @@protoc_insertion_point(message_clear_start:demo.pb.SignInActivity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  days_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SignInActivity::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 days = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_days(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_days(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SignInActivity::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:demo.pb.SignInActivity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 days = 1;
  {
    int byte_size = _days_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_days(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:demo.pb.SignInActivity)
  return target;
}

size_t SignInActivity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:demo.pb.SignInActivity)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 days = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->days_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _days_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignInActivity::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:demo.pb.SignInActivity)
  GOOGLE_DCHECK_NE(&from, this);
  const SignInActivity* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SignInActivity>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:demo.pb.SignInActivity)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:demo.pb.SignInActivity)
    MergeFrom(*source);
  }
}

void SignInActivity::MergeFrom(const SignInActivity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:demo.pb.SignInActivity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  days_.MergeFrom(from.days_);
}

void SignInActivity::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:demo.pb.SignInActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignInActivity::CopyFrom(const SignInActivity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:demo.pb.SignInActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignInActivity::IsInitialized() const {
  return true;
}

void SignInActivity::InternalSwap(SignInActivity* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  days_.InternalSwap(&other->days_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SignInActivity::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
}  // namespace demo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::demo::pb::Currency* Arena::CreateMaybeMessage< ::demo::pb::Currency >(Arena* arena) {
  return Arena::CreateMessageInternal< ::demo::pb::Currency >(arena);
}
template<> PROTOBUF_NOINLINE ::demo::pb::Card* Arena::CreateMaybeMessage< ::demo::pb::Card >(Arena* arena) {
  return Arena::CreateMessageInternal< ::demo::pb::Card >(arena);
}
template<> PROTOBUF_NOINLINE ::demo::pb::Cards* Arena::CreateMaybeMessage< ::demo::pb::Cards >(Arena* arena) {
  return Arena::CreateMessageInternal< ::demo::pb::Cards >(arena);
}
template<> PROTOBUF_NOINLINE ::demo::pb::Pet* Arena::CreateMaybeMessage< ::demo::pb::Pet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::demo::pb::Pet >(arena);
}
template<> PROTOBUF_NOINLINE ::demo::pb::Pets* Arena::CreateMaybeMessage< ::demo::pb::Pets >(Arena* arena) {
  return Arena::CreateMessageInternal< ::demo::pb::Pets >(arena);
}
template<> PROTOBUF_NOINLINE ::demo::pb::SignInActivity* Arena::CreateMaybeMessage< ::demo::pb::SignInActivity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::demo::pb::SignInActivity >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
