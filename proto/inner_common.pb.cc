// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inner_common.proto

#include "inner_common.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_inner_5fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataFragment_inner_5fcommon_2eproto;
namespace wukong {
namespace pb {
class DataFragmentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataFragment> _instance;
} _DataFragment_default_instance_;
class DataFragmentsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataFragments> _instance;
} _DataFragments_default_instance_;
}  // namespace pb
}  // namespace wukong
static void InitDefaultsscc_info_DataFragment_inner_5fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::wukong::pb::_DataFragment_default_instance_;
    new (ptr) ::wukong::pb::DataFragment();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::wukong::pb::DataFragment::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataFragment_inner_5fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DataFragment_inner_5fcommon_2eproto}, {}};

static void InitDefaultsscc_info_DataFragments_inner_5fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::wukong::pb::_DataFragments_default_instance_;
    new (ptr) ::wukong::pb::DataFragments();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::wukong::pb::DataFragments::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DataFragments_inner_5fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DataFragments_inner_5fcommon_2eproto}, {
      &scc_info_DataFragment_inner_5fcommon_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_inner_5fcommon_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_inner_5fcommon_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_inner_5fcommon_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_inner_5fcommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wukong::pb::DataFragment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wukong::pb::DataFragment, fragname_),
  PROTOBUF_FIELD_OFFSET(::wukong::pb::DataFragment, fragdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::wukong::pb::DataFragments, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wukong::pb::DataFragments, fragments_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::wukong::pb::DataFragment)},
  { 7, -1, sizeof(::wukong::pb::DataFragments)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wukong::pb::_DataFragment_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wukong::pb::_DataFragments_default_instance_),
};

const char descriptor_table_protodef_inner_5fcommon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022inner_common.proto\022\twukong.pb\"2\n\014DataF"
  "ragment\022\020\n\010fragName\030\001 \001(\t\022\020\n\010fragData\030\002 "
  "\001(\014\";\n\rDataFragments\022*\n\tfragments\030\001 \003(\0132"
  "\027.wukong.pb.DataFragmentb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_inner_5fcommon_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_inner_5fcommon_2eproto_sccs[2] = {
  &scc_info_DataFragment_inner_5fcommon_2eproto.base,
  &scc_info_DataFragments_inner_5fcommon_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_inner_5fcommon_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_inner_5fcommon_2eproto = {
  false, false, descriptor_table_protodef_inner_5fcommon_2eproto, "inner_common.proto", 152,
  &descriptor_table_inner_5fcommon_2eproto_once, descriptor_table_inner_5fcommon_2eproto_sccs, descriptor_table_inner_5fcommon_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_inner_5fcommon_2eproto::offsets,
  file_level_metadata_inner_5fcommon_2eproto, 2, file_level_enum_descriptors_inner_5fcommon_2eproto, file_level_service_descriptors_inner_5fcommon_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_inner_5fcommon_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_inner_5fcommon_2eproto)), true);
namespace wukong {
namespace pb {

// ===================================================================

void DataFragment::InitAsDefaultInstance() {
}
class DataFragment::_Internal {
 public:
};

DataFragment::DataFragment(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:wukong.pb.DataFragment)
}
DataFragment::DataFragment(const DataFragment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fragname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fragname().empty()) {
    fragname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_fragname(),
      GetArena());
  }
  fragdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fragdata().empty()) {
    fragdata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_fragdata(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:wukong.pb.DataFragment)
}

void DataFragment::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataFragment_inner_5fcommon_2eproto.base);
  fragname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fragdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DataFragment::~DataFragment() {
  // @@protoc_insertion_point(destructor:wukong.pb.DataFragment)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataFragment::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  fragname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fragdata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DataFragment::ArenaDtor(void* object) {
  DataFragment* _this = reinterpret_cast< DataFragment* >(object);
  (void)_this;
}
void DataFragment::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataFragment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataFragment& DataFragment::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataFragment_inner_5fcommon_2eproto.base);
  return *internal_default_instance();
}


void DataFragment::Clear() {
// @@protoc_insertion_point(message_clear_start:wukong.pb.DataFragment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fragname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  fragdata_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataFragment::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string fragName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_fragname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "wukong.pb.DataFragment.fragName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes fragData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_fragdata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataFragment::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wukong.pb.DataFragment)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string fragName = 1;
  if (this->fragname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fragname().data(), static_cast<int>(this->_internal_fragname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "wukong.pb.DataFragment.fragName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_fragname(), target);
  }

  // bytes fragData = 2;
  if (this->fragdata().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_fragdata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wukong.pb.DataFragment)
  return target;
}

size_t DataFragment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wukong.pb.DataFragment)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string fragName = 1;
  if (this->fragname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fragname());
  }

  // bytes fragData = 2;
  if (this->fragdata().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_fragdata());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataFragment::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wukong.pb.DataFragment)
  GOOGLE_DCHECK_NE(&from, this);
  const DataFragment* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataFragment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wukong.pb.DataFragment)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wukong.pb.DataFragment)
    MergeFrom(*source);
  }
}

void DataFragment::MergeFrom(const DataFragment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wukong.pb.DataFragment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fragname().size() > 0) {
    _internal_set_fragname(from._internal_fragname());
  }
  if (from.fragdata().size() > 0) {
    _internal_set_fragdata(from._internal_fragdata());
  }
}

void DataFragment::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wukong.pb.DataFragment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataFragment::CopyFrom(const DataFragment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wukong.pb.DataFragment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataFragment::IsInitialized() const {
  return true;
}

void DataFragment::InternalSwap(DataFragment* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  fragname_.Swap(&other->fragname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  fragdata_.Swap(&other->fragdata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DataFragment::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DataFragments::InitAsDefaultInstance() {
}
class DataFragments::_Internal {
 public:
};

DataFragments::DataFragments(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  fragments_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:wukong.pb.DataFragments)
}
DataFragments::DataFragments(const DataFragments& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      fragments_(from.fragments_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:wukong.pb.DataFragments)
}

void DataFragments::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataFragments_inner_5fcommon_2eproto.base);
}

DataFragments::~DataFragments() {
  // @@protoc_insertion_point(destructor:wukong.pb.DataFragments)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataFragments::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DataFragments::ArenaDtor(void* object) {
  DataFragments* _this = reinterpret_cast< DataFragments* >(object);
  (void)_this;
}
void DataFragments::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataFragments::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataFragments& DataFragments::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataFragments_inner_5fcommon_2eproto.base);
  return *internal_default_instance();
}


void DataFragments::Clear() {
// @@protoc_insertion_point(message_clear_start:wukong.pb.DataFragments)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fragments_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataFragments::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .wukong.pb.DataFragment fragments = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fragments(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataFragments::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wukong.pb.DataFragments)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .wukong.pb.DataFragment fragments = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_fragments_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_fragments(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wukong.pb.DataFragments)
  return target;
}

size_t DataFragments::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wukong.pb.DataFragments)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .wukong.pb.DataFragment fragments = 1;
  total_size += 1UL * this->_internal_fragments_size();
  for (const auto& msg : this->fragments_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataFragments::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wukong.pb.DataFragments)
  GOOGLE_DCHECK_NE(&from, this);
  const DataFragments* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataFragments>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wukong.pb.DataFragments)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wukong.pb.DataFragments)
    MergeFrom(*source);
  }
}

void DataFragments::MergeFrom(const DataFragments& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wukong.pb.DataFragments)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fragments_.MergeFrom(from.fragments_);
}

void DataFragments::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wukong.pb.DataFragments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataFragments::CopyFrom(const DataFragments& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wukong.pb.DataFragments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataFragments::IsInitialized() const {
  return true;
}

void DataFragments::InternalSwap(DataFragments* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  fragments_.InternalSwap(&other->fragments_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataFragments::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
}  // namespace wukong
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::wukong::pb::DataFragment* Arena::CreateMaybeMessage< ::wukong::pb::DataFragment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wukong::pb::DataFragment >(arena);
}
template<> PROTOBUF_NOINLINE ::wukong::pb::DataFragments* Arena::CreateMaybeMessage< ::wukong::pb::DataFragments >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wukong::pb::DataFragments >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
